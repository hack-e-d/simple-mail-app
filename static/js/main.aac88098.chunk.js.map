{"version":3,"sources":["components/SignOut.js","components/SendMail.js","components/Mails.js","components/MailBox.js","components/SignIn.js","App.js","reportWebVitals.js","index.js"],"names":["SignOut","auth","currentUser","className","onClick","signOut","size","SendMail","firebase","firestore","mailRef","collection","useState","mailBody","setMailBody","recevierEmailId","setRecevierEmailId","sendMail","e","a","preventDefault","displayName","uid","photoURL","add","user","body","createdAt","FieldValue","serverTimestamp","senderEmailId","email","alert","onSubmit","type","value","onChange","target","placeholder","disabled","Mails","props","mail","src","alt","MailBox","query","where","useCollectionData","ifField","mails","map","id","SignIn","provider","GoogleAuthProvider","signInWithPopup","process","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","App","useAuthState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aac88098.chunk.js","sourcesContent":["import react from 'react';\r\nimport { FaSignOutAlt } from 'react-icons/fa';\r\n\r\nconst SignOut = ({auth}) => {\r\n    return (\r\n        auth.currentUser && (\r\n            <div className='signout'>\r\n                <FaSignOutAlt className=\"signout-option\" onClick={() => auth.signOut()} size='1.5rem' />\r\n            </div>\r\n        )\r\n    );\r\n};\r\n\r\nexport default SignOut;","import react, { useRef, useState } from \"react\";\r\nimport { RiMailSendFill } from 'react-icons/ri'\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst SendMail = ({firebase}) =>{\r\n\r\n    const firestore = firebase.firestore();\r\n    const auth = firebase.auth();\r\n\r\n    // const dummy = useRef();\r\n    const mailRef = firestore.collection('mails');\r\n\r\n    // States\r\n    const [mailBody,setMailBody] = useState('');\r\n    const [recevierEmailId ,setRecevierEmailId] = useState('');\r\n\r\n    const sendMail = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const {displayName, uid, photoURL } = auth.currentUser;\r\n        await mailRef.add({\r\n            user: displayName,\r\n            uid: uid,\r\n            photoURL: photoURL,\r\n            body: mailBody,\r\n            recevierEmailId: recevierEmailId,\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n            senderEmailId: auth.currentUser.email,\r\n        })\r\n\r\n        setMailBody('');\r\n        setRecevierEmailId('');\r\n        alert(\"Email Sent....\");\r\n        // dummy.current.scrollIntoView({ behavior: 'smooth'});\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>\r\n                New Mail\r\n            </h2>\r\n            <div className='mail-sender-container'>\r\n                <form onSubmit={sendMail} >\r\n                    <input type='email' value={recevierEmailId} onChange={(e) => setRecevierEmailId(e.target.value)} placeholder='Receiver Email Id' />\r\n                    <input type='text' value={mailBody} onChange={(e) => setMailBody(e.target.value)} placeholder='Enter the mail body.....' />\r\n                    <button className='send-button' type='submit' disabled={!mailBody && !recevierEmailId}><RiMailSendFill size='1.5rem'/></button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SendMail;","import react from 'react';\r\n\r\nconst Mails = (props) => {\r\n    \r\n    const { user, body, photoURL, recevierEmailId, uid } = props.mail;\r\n    return (\r\n        <div className='mail'>\r\n            <div className='mail-header'>\r\n                <span>\r\n                    <img src={photoURL || 'https://i.imgur.com/rFbS5ms.png'} alt='sender photo' />\r\n                </span>\r\n                <span className='sender-name'>\r\n                    {user}\r\n                </span>\r\n            </div>\r\n            <div className='mail-body'>\r\n                {body}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Mails;","import React from 'react';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport SignOut from './SignOut';\r\nimport SendMail from './SendMail';\r\nimport Mails from './Mails';\r\n\r\nconst MailBox = ({firebase}) => {\r\n    \r\n    const auth = firebase.auth();\r\n    const firestore = firebase.firestore();\r\n\r\n    const mailRef = firestore.collection('mails');\r\n    const query = mailRef.where(\"recevierEmailId\", \"==\", auth.currentUser.email);\r\n    const [mails] = useCollectionData(query, {ifField: 'id'});\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <SignOut auth={auth}/>\r\n            </div>\r\n            <h2>Inbox</h2>\r\n            <div className='inbox'>\r\n                {mails && mails.map(mail => <Mails key={mail.id} mail={mail} />)}\r\n            </div>\r\n            <div>\r\n                <SendMail firebase={firebase} />\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MailBox;","import React from 'react';\r\nimport firebase from 'firebase/app';\r\n\r\nconst SignIn = ({auth}) =>{\r\n    const signInWithGoogle = () => {\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n        auth.signInWithPopup(provider);\r\n      }\r\n    return (\r\n        <div className=\"\">\r\n            <button className=\"\" onClick={signInWithGoogle}>\r\n            <img className=\"w-5 mr-2 block\" src={process.env.PUBLIC_URL + '/google-icon.svg'} alt='Google Icon' />\r\n            <span className=\"block\">Sign In With Google</span>\r\n          </button>\r\n        </div>\r\n      )\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport './components/MailBox.js'\n\nimport './App.css';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport MailBox from './components/MailBox.js';\nimport SignIn from './components/SignIn.js';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyDExnUZi4WB94OQ6h1LJnOPl8v89H_17v0\",\n  authDomain: \"simple-mail-app.firebaseapp.com\",\n  projectId: \"simple-mail-app\",\n  storageBucket: \"simple-mail-app.appspot.com\",\n  messagingSenderId: \"584763410018\",\n  appId: \"1:584763410018:web:e891154a280fc42aa2733b\",\n  measurementId: \"G-EJXTRQ6REH\"\n})\n\nconst auth = firebase.auth();\n\nfunction App() {\n  const [user] = useAuthState(auth);\n  return (\n    <div className=\"App\">\n      <h1> Welcome Hacked Mail Platform</h1>\n      <div className='app-container'>\n        {user ? <MailBox firebase={firebase} /> : <SignIn auth={auth}/>}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}